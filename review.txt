netease react 项目
    hash 替换  - HashedModuleIdsPlugin（用路劲来映射module id） ，在加入引入一个新模块的时候，导致打包的chunkhash 全都变了的问题
    dllplugin - 单独打包vendor 生成manifest.json 给 DllReferencePlugin用
    commonChunkPlugin - 提出webpack 的一些运行时代码（用来解析和加载模块），导致修改比如根组件的代码，vendor的hash 也变了
    gulp 的return 的问题 - 不return这个stream 的话，该task的异步结果不会等待dependence task执行完

    异步请求更新状态问题

chuanhua react 项目
    componentWillRecieveProps 每次change state 的时候都会触发？

    fetch 并不是很好使用的问题  -  axios
    异步action 处理的问题 - dva


react-router 源码
redux 
    - 中间件代理createStore ,修改默认dispatch
    - modifer还可以代理reducer, 提出公共逻辑


dva （redux-saga , react-router,react-router-redux , react-async-component (组件动态加载)）
   - redux-saga
   - effects 
        - call 声明一个effect，返回一个描述 action 的纯文本对象，便于测试,不需要真的发起ajax 来测试
        - put 创建并yield 一个 dispatch effect，同样也是便于测试



mobx
vue / vuex



react 
	- 处理异步的问题
	- setState 知乎(https://zhuanlan.zhihu.com/p/28905707?utm_source=wechat_session&utm_medium=social)
	- bind this

npm link /cache


yield /await 
    co模块约定，yield命令后面只能是 Thunk 函数或 Promise 对象
    而async函数的await命令后面，可以是Promise 对象和原始类型的值（数值、字符串和布尔值，但这时等同于同步操作）
    async函数的返回值是 Promise 对象，这比 Generator 函数的返回值是 Iterator 


libfe
    网易
        - 1px 不是物理1px, clientWidth/6.4 
    淘宝
        - 1px 是物理1px , clientWidth/10
css
    bfc - 级块上下文
    flex - ie10+ （-ms-支持）
        flex-direction ----\  flex-flow
        flex-wrap      ----/
        justify-content  水平对齐方式
        align-items    垂直对齐方式
        align-content  多根轴线的对齐方式
        order  排列顺序
        flex-grow  默认为0 瓜分剩余空间  ---- \
        flex-shrink 空间不足将缩小       ----  | -  flex:1 1 auto; flex:0 0 auto;
        flex-basis 项目占据主轴的空间    ---- / 
        align-self 单独设置一个item 的垂直对齐方式

    双飞翼布局 - margin 百分比相对于包含块的宽度
    
    http://www.cnblogs.com/zhaodongyu/p/3341080.html

tcp
    3次握手
    4次分手

https
    tls对数据进行加密
    数据传输是对称加密，握手过程加密生成的密码是非对称


用qq/sina登录
    当你用qq登录第三方应用时， qq返回token 给第三方应用,第三方应用可以根据这个token 来访问qq的开放api提供的用户信息（这些信息当然你可以授权哪些，比如头像，昵称等）    

xss
    - 防御：内联事件拦截,csp,htmlencode | MutationObserver 监听可疑的外部模块
    - 反射型， 存储型（上传svg onload 里有payload）， dom 型（url 参数等）

csrf
    - 防御：检查http header referer 字段，添加验证码，使用一次性token（结合xss，都有可能无效）

装饰模式（react redux - connect）， 门面模式,代理模式


node 模块
    - 普通模块 ，供代码使用
    - 二进制模块， 供cli 调用
    http://www.cnblogs.com/CyLee/p/6195022.html

    module.exports / exports   两者都是模块级别的变量
        - 前者的exports是一个引用， 后者的exports是一个变量,只是一个快捷方式，这个变量一开始被赋值为 module.exports，而赋值给module.exports 的东西才可以导出，
          直接赋值给exports 的东西是无法导出的，除非 再把exports 赋给 module.exports。



    tcp 支持本地数据通信， 还可以跨网络的进程间通信（ip地址 + 端口号 标识唯一的一个进程，而IP地址 + 端口号就称为socket）
    net 模块即是用来创建 tcp /ipc 服务器 、 客户端的

    __dirname 当前模块的文件夹名称  __filename 当前模块的 文件名称

    event loop 
        - 浏览器端
            主线程执行完后才读取任务队列
        - node 端
            V8 解析js -- 调用node api -- libuv 负责执行api ,不同任务分配给不同线程  -- 将结果以异步方式返回给 V8



http code
    204,403


koa/express 异常处理
    koa - 使用‘error' 事件，如果你不指定‘error’ 监听，则调用内部默认的error处理，只是log error message
        - 使用try - catch
    this.throw 把错误信息直接暴露给用户
    Promise 里throw 的东西也可以catch 到，并打印出来 (http://efe.baidu.com/blog/promises-anti-pattern/)




我要怎么实现？
    redux
    mobx